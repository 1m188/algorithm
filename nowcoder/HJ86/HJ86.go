/*
HJ86 求最大连续bit数

描述
对于给定的十进制整数
n
n，求解其二进制表示中，最长连续
1
1 段的长度。
输入描述：
输入一个十进制整数
n
(
1
≦
n
≦
5
×
1
0
5
)
n(1≦n≦5×10
5
 )。
输出描述：
输出一个整数，表示
n
n 的二进制表示中，最长连续
1
1 段的长度。
示例1
输入：
200
复制
输出：
2
复制
说明：
在这个样例中，十进制
(
200
)
10
(200)
10
​
  等于二进制
(
11

001

000
)
2
(11001000)
2
​
 ，其中最长连续
1
1 段的长度为
2
2。
示例2
输入：
1023
复制
输出：
10
复制
说明：
在这个样例中，十进制
(
1023
)
10
(1023)
10
​
  等于二进制
(
1

111

111

111
)
2
(1111111111)
2
​
 。
*/

package main

import (
	"fmt"
)

func main() {
	var n uint
	fmt.Scan(&n)

	res, tmp := 0, 0

	for n > 0 {
		if n&1 == 1 {
			tmp++
		} else {
			if tmp > res {
				res = tmp
			}
			tmp = 0
		}
		n >>= 1
	}
	if tmp > res {
		res = tmp
	}

	fmt.Println(res)
}
