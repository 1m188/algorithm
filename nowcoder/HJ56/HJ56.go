/*
HJ56 完全数计算

描述
完全数，又称完美数或完备数，是一些特殊的自然数。它所有的真因子（即除了自身以外的约数）之和恰好等于它本身。

现在，你需要计算
1
1 到
n
n 之间完全数的个数。
输入描述：
输入一个整数
n
(
1
≦
n
≦
5
×
1
0
5
)
n(1≦n≦5×10
5
 )。
输出描述：
输出一个整数，代表区间内完全数的个数。
示例1
输入：
1000
复制
输出：
3
复制
说明：
第一个完全数是
6
6，因为
6
6 的约数有
1
,
2
,
3
,
6
1,2,3,6，去除本身后，剩余约数之和为
1
+
2
+
3
=
6
1+2+3=6。
第二个完全数是
28
28，因为
28
28 的约数有
1
,
2
,
4
,
7
,
14
,
28
1,2,4,7,14,28，去除本身后，剩余约数之和为
1
+
2
+
4
+
7
+
14
=
28
1+2+4+7+14=28。
*/

package main

import (
	"fmt"
)

func main() {

	li := []int{6, 28, 496, 8128}
	n := 0
	fmt.Scan(&n)
	for i := len(li) - 1; i >= 0; i-- {
		if li[i] <= n {
			fmt.Println(i + 1)
			return
		}
	}
	fmt.Println(0)

}
