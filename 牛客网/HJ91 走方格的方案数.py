'''
描述
对于给定的由 
n
+
1
n+1 条横线和 
m
+
1
m+1 条竖线组成的网格，共相交形成 
n
×
m
n×m 个格点。
现在，你从网格的左上角格点出发，只能沿着网格线向右或向下走，求解走到右下角格点的不同方案数。
输入描述：
在一行上输入两个整数 
n
,
m
(
1
≦
n
,
m
≦
8
)
n,m(1≦n,m≦8)，代表网格的行数和列数。
输出描述：
输出一个整数，代表不同的行走方案数。
示例1
输入：
2 2
复制
输出：
6
复制
说明：
在这个样例中，所绘出的网格图如下图所示。
网格图
相似企业真题
'''

n, m = map(int, input().split())
dp = [[0] * (m + 1) for _ in range(n + 1)]
for i in range(1, n + 1):
    dp[i][0] = 1
for i in range(1, m + 1):
    dp[0][i] = 1
for i in range(1, n + 1):
    for j in range(1, m + 1):
        dp[i][j] = dp[i - 1][j] + dp[i][j - 1]
print(dp[n][m])
